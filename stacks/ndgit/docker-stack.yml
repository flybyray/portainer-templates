version: '3.4'
services:
  mongo:
    command: --replSet mongo-replica-set
    deploy:
      replicas: ${MONGO_REPLICAS}
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 60s
    image: mongo:3
    networks:
      backend:
        aliases:
        - mongo
  elasticsearch:
    deploy:
      replicas: ${ELASTICSEARCH_REPLICAS}
      resources:
        limits:
          memory: 1280M
        reservations:
          memory: 640M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 60s
    environment:
      ES_CLUSTER_NAME: ${ES_CLUSTER_NAME}
      ES_NODE_NAME: ${ES_NODE_NAME}
      ES_HEAP_SIZE: ${ES_HEAP_SIZE}
      ES_DIRECT_SIZE: ${ES_DIRECT_SIZE}72m
      ES_NETWORK_HOST: ${ES_NETWORK_HOST}
      ES_DISCOVERY_ZEN_PING_UNICAST_HOSTS: ${ES_DISCOVERY_ZEN_PING_UNICAST_HOSTS}
      ES_DISCOVERY_ZEN_MINIMUM_MASTER_NODES: ${ES_DISCOVERY_ZEN_MINIMUM_MASTER_NODES}
      ES_GATEWAY_RECOVER_AFTER_NODES: ${ES_GATEWAY_RECOVER_AFTER_NODES}
    image: elasticsearch:2
    networks:
      backend:
        aliases:
        - elasticsearch
    volumes:
    - elasticsearch_data:/usr/share/elasticsearch/data:rw

networks:
  backend:
    driver: overlay

volumes:
  mongodb_data:
    external:
      name: '{{.Service.Name}}_data-{{.Task.Slot}}'
  elasticsearch_data:
    external:
      name: '{{.Service.Name}}_data-{{.Task.Slot}}'
